<?xml version="1.0"?>
<launch>
  <!-- SegmentGroundPlane by GPT -->
  <!-- <include file="$(find ground_plane_fitting)/launch/ground_plane_fitting.launch"/> -->

  <!-- Clustering -->
  <node name="dbscan_segment_origin" pkg="dbscan_segment_origin" type="dbscan_segment_origin" output="screen">
    <!-- Input Topic Names -->
    <!-- <param name="lidar_points_topic"                  value="/os_cloud_node/points"/> -->
    <param name="lidar_points_topic"                       value="/segmentation_outlier_points"/>
    <!-- <param name="lidar_points_topic"                  value="/fsds/lidar/Lidar1"/> -->

    <!-- <param name="sub_ground_points_topic"                  value="/points_ground"/>
    <param name="sub_no_ground_points_topic"                  value="/points_no_ground"/> -->

    <!-- Output Topic Names -->
    <param name="cloud_ground_topic"                  value="obstacle_detector/cloud_ground"/>
    <param name="cloud_clusters_topic"                value="obstacle_detector/cloud_clusters"/>
    <param name="jsk_bboxes_topic"                    value="obstacle_detector/jsk_bboxes"/>
    <param name="autoware_objects_topic"              value="obstacle_detector/objects"/>
    <param name="bbox_target_frame"                   value="velodyne"/>

    <!-- Parameters -->
    <param name="output_frame"                   value="velodyne"/>
  </node>

  <!-- Dynamic Reconfigure GUI -->
  <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" output="screen" />

  <node pkg="tf2_ros" type="static_transform_publisher" name="world_velodyne" args="0 0 0 0 0 0 1 world velodyne" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="map_velodyne" args="0 0 0 0 0 0 1 world map" />

  <!-- Rviz -->
  <!-- <node type="rviz" name="rviz" pkg="rviz" args="-d $(find dbscan_segment_origin)/rviz/dbscan_segment_origin.rviz" output="log" respawn="false" /> -->

</launch> 
